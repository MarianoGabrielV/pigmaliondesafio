"""
comparar_tiempos.py

Este programa compara el rendimiento de dos soluciones al mismo problema:
verificar si existe un par de n√∫meros en una lista que sumen un valor espec√≠fico.

Se eval√∫an dos versiones del mismo algoritmo:
1. Versi√≥n fuerza bruta (desafio_pun_uno.py)
2. Versi√≥n optimizada (desafio_pun_dos.py)

Ambas funciones reciben una lista de n√∫meros enteros y un n√∫mero objetivo.
El programa muestra cu√°nto tarda cada versi√≥n en ejecutarse y cu√°l es m√°s eficiente.
"""

import time
from desafio_pun_uno import existe_una_coincidencia
from desafio_pun_dos import existe_una_coincidencia_optima

def comparar_tiempos():
    print("‚è±Ô∏è Comparaci√≥n de tiempos de ejecuci√≥n entre fuerza bruta y optimizada\n")

    # Creamos una lista de prueba con muchos elementos (del 1 al 5999)
    # Esto permite notar la diferencia entre ambas soluciones
    numeros = list(range(1, 6000))
    
    # Elegimos un n√∫mero objetivo alto para forzar que el par v√°lido est√© al final de la lista
    objetivo = 2000

    # --------------------------
    # Versi√≥n 1: Fuerza Bruta
    # --------------------------
    inicio = time.time()  # Guardamos el tiempo inicial
    resultado_bruta = existe_una_coincidencia(numeros, objetivo)
    tiempo_bruta = time.time() - inicio  # Calculamos el tiempo transcurrido
    print(f"Desaf√≠o Punto Uno ‚Üí Resultado: {resultado_bruta} - Tiempo: {tiempo_bruta:.6f} segundos")

    # --------------------------
    # Versi√≥n 2: Optimizada
    # --------------------------
    inicio = time.time()
    resultado_optima = existe_una_coincidencia_optima(numeros, objetivo)
    tiempo_optima = time.time() - inicio
    print(f"Desaf√≠o Punto Dos (optimizada)   ‚Üí Resultado: {resultado_optima} - Tiempo: {tiempo_optima:.6f} segundos")

    # --------------------------
    # Resumen Comparativo
    # --------------------------
    diferencia = tiempo_bruta - tiempo_optima
    print("\nüìä En resumen:")
    if tiempo_bruta > tiempo_optima:
        print(f"‚úÖ La versi√≥n optimizada fue m√°s r√°pida por aproximadamente {diferencia:.6f} segundos.")
    else:
        print("‚ùó Ambas versiones fueron similares en tiempo (lista posiblemente muy peque√±a).")

# Punto de entrada del programa
if __name__ == "__main__":
    comparar_tiempos()
